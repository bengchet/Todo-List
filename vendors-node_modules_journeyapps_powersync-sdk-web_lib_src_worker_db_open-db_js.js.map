{"version":3,"file":"vendors-node_modules_journeyapps_powersync-sdk-web_lib_src_worker_db_open-db_js.js","mappings":"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","sources":["webpack://PowerSync Angular Demo/./node_modules/@journeyapps/powersync-sdk-web/lib/src/worker/db/open-db.js","webpack://PowerSync Angular Demo/./node_modules/uuid/dist/esm-browser/native.js","webpack://PowerSync Angular Demo/./node_modules/uuid/dist/esm-browser/regex.js","webpack://PowerSync Angular Demo/./node_modules/uuid/dist/esm-browser/rng.js","webpack://PowerSync Angular Demo/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://PowerSync Angular Demo/./node_modules/uuid/dist/esm-browser/v4.js","webpack://PowerSync Angular Demo/./node_modules/uuid/dist/esm-browser/validate.js","webpack://PowerSync Angular Demo/./node_modules/@journeyapps/wa-sqlite/src/sqlite-api.js","webpack://PowerSync Angular Demo/./node_modules/@journeyapps/wa-sqlite/src/sqlite-constants.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport * as SQLite from '@journeyapps/wa-sqlite';\nimport '@journeyapps/wa-sqlite';\nimport * as Comlink from 'comlink';\nimport { v4 as uuid } from 'uuid';\nexport function _openDB(dbFileName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { default: moduleFactory } = yield import('@journeyapps/wa-sqlite/dist/wa-sqlite-async.mjs');\n        const module = yield moduleFactory();\n        const sqlite3 = SQLite.Factory(module);\n        const { IDBBatchAtomicVFS } = yield import('@journeyapps/wa-sqlite/src/examples/IDBBatchAtomicVFS.js');\n        const vfs = new IDBBatchAtomicVFS(dbFileName);\n        sqlite3.vfs_register(vfs, true);\n        const db = yield sqlite3.open_v2(dbFileName);\n        /**\n         * Listeners are exclusive to the DB connection.\n         */\n        const listeners = new Map();\n        sqlite3.register_table_onchange_hook(db, (opType, tableName, rowId) => {\n            Array.from(listeners.values()).forEach((l) => l(opType, tableName, rowId));\n        });\n        const registerOnTableChange = (callback) => {\n            const id = uuid();\n            listeners.set(id, callback);\n            return Comlink.proxy(() => {\n                listeners.delete(id);\n            });\n        };\n        /**\n         * This executes SQL statements.\n         */\n        const execute = (sql, bindings) => __awaiter(this, void 0, void 0, function* () {\n            // Running multiple statements on the same connection concurrently should not be allowed\n            return navigator.locks.request(`db-execute-${dbFileName}`, () => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                const results = [];\n                try {\n                    for (var _d = true, _e = __asyncValues(sqlite3.statements(db, sql)), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n                        _c = _f.value;\n                        _d = false;\n                        const stmt = _c;\n                        let columns;\n                        const wrappedBindings = bindings ? [bindings] : [[]];\n                        for (const binding of wrappedBindings) {\n                            // TODO not sure why this is needed currently, but booleans break\n                            binding.forEach((b, index, arr) => {\n                                if (typeof b == 'boolean') {\n                                    arr[index] = b ? 1 : 0;\n                                }\n                            });\n                            sqlite3.reset(stmt);\n                            if (bindings) {\n                                sqlite3.bind_collection(stmt, binding);\n                            }\n                            const rows = [];\n                            while ((yield sqlite3.step(stmt)) === SQLite.SQLITE_ROW) {\n                                const row = sqlite3.row(stmt);\n                                rows.push(row);\n                            }\n                            columns = columns !== null && columns !== void 0 ? columns : sqlite3.column_names(stmt);\n                            if (columns.length) {\n                                results.push({ columns, rows });\n                            }\n                        }\n                        // When binding parameters, only a single statement is executed.\n                        if (bindings) {\n                            break;\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                let rows = [];\n                for (let resultset of results) {\n                    for (let row of resultset.rows) {\n                        let outRow = {};\n                        resultset.columns.forEach((key, index) => {\n                            outRow[key] = row[index];\n                        });\n                        rows.push(outRow);\n                    }\n                }\n                const result = {\n                    insertId: sqlite3.last_insert_id(db),\n                    rowsAffected: sqlite3.changes(db),\n                    rows: {\n                        _array: rows,\n                        length: rows.length\n                    }\n                };\n                return result;\n            }));\n        });\n        return {\n            execute: Comlink.proxy(execute),\n            registerOnTableChange: Comlink.proxy(registerOnTableChange),\n            close: Comlink.proxy(() => {\n                sqlite3.close(db);\n            })\n        };\n    });\n}\n//# sourceMappingURL=open-db.js.map","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","// Copyright 2021 Roy T. Hashimoto. All Rights Reserved.\n\nimport * as SQLite from './sqlite-constants.js';\nexport * from './sqlite-constants.js';\n\n/**\n * Need to have a serializer for bigint\n * https://github.com/GoogleChromeLabs/jsbi/issues/30\n */\nif (typeof BigInt.prototype['toJSON'] == 'undefined') {\n  BigInt.prototype['toJSON'] = function() {\n    return this.toString();\n  };\n}\n\nconst MAX_INT64 = 0x7fffffffffffffffn;\nconst MIN_INT64 = -0x8000000000000000n;\n\nexport class SQLiteError extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n}\n\nconst async = true;\n\nconst onTableChangeCallbacks = {};\nglobalThis.__onTablesChanged = function(db, opType, tableName, rowId) {\n  setTimeout(() => onTableChangeCallbacks[db]?.(opType, tableName, rowId), 0);\n};\n\n/**\n * Builds a Javascript API from the Emscripten module. This API is still\n * low-level and closely corresponds to the C API exported by the module,\n * but differs in some specifics like throwing exceptions on errors.\n * @param {*} Module SQLite Emscripten module\n * @returns {SQLiteAPI}\n */\nexport function Factory(Module) {\n  /** @type {SQLiteAPI} */ const sqlite3 = {};\n\n  const sqliteFreeAddress = Module._getSqliteFree();\n\n  // Allocate some space for 32-bit returned values.\n  const tmp = Module._malloc(8);\n  const tmpPtr = [tmp, tmp + 4];\n\n  // Convert a JS string to a C string. sqlite3_malloc is used to allocate\n  // memory (use sqlite3_free to deallocate).\n  function createUTF8(s) {\n    if (typeof s !== 'string') return 0;\n    const n = Module.lengthBytesUTF8(s);\n    const zts = Module._sqlite3_malloc(n + 1);\n    Module.stringToUTF8(s, zts, n + 1);\n    return zts;\n  }\n\n  /**\n   * Concatenate 32-bit numbers into a 64-bit (signed) BigInt.\n   * @param {number} lo32\n   * @param {number} hi32\n   * @returns {bigint}\n   */\n  function cvt32x2ToBigInt(lo32, hi32) {\n    return (BigInt(hi32) << 32n) | (BigInt(lo32) & 0xffffffffn);\n  }\n\n  // /**\n  //  * Setup table change update callback\n  //  */\n  // var onTableChangedFunctionPointer = Module.addFunction(onTableUpdate);\n  // var passFnPointer = Module.cwrap('passFnPointer', 'undefined', ['number']);\n  // passFnPointer(onTableChangedFunctionPointer);\n  /**\n   * Concatenate 32-bit numbers and return as number or BigInt, depending\n   * on the value.\n   * @param {number} lo32\n   * @param {number} hi32\n   * @returns {number|bigint}\n   */\n  const cvt32x2AsSafe = (function() {\n    const hiMax = BigInt(Number.MAX_SAFE_INTEGER) >> 32n;\n    const hiMin = BigInt(Number.MIN_SAFE_INTEGER) >> 32n;\n\n    return function(lo32, hi32) {\n      if (hi32 > hiMax || hi32 < hiMin) {\n        // Can't be expressed as a Number so use BigInt.\n        return cvt32x2ToBigInt(lo32, hi32);\n      } else {\n        // Combine the upper and lower 32-bit numbers. The complication is\n        // that lo32 is a signed integer which makes manipulating its bits\n        // a little tricky - the sign bit gets handled separately.\n        return hi32 * 0x100000000 + (lo32 & 0x7fffffff) - (lo32 & 0x80000000);\n      }\n    };\n  })();\n\n  const databases = new Set();\n  function verifyDatabase(db) {\n    if (!databases.has(db)) {\n      throw new SQLiteError('not a database', SQLite.SQLITE_MISUSE);\n    }\n  }\n\n  const mapStmtToDB = new Map();\n  function verifyStatement(stmt) {\n    if (!mapStmtToDB.has(stmt)) {\n      throw new SQLiteError('not a statement', SQLite.SQLITE_MISUSE);\n    }\n  }\n\n  sqlite3.bind_collection = function(stmt, bindings) {\n    verifyStatement(stmt);\n    const isArray = Array.isArray(bindings);\n    const nBindings = sqlite3.bind_parameter_count(stmt);\n    for (let i = 1; i <= nBindings; ++i) {\n      const key = isArray ? i - 1 : sqlite3.bind_parameter_name(stmt, i);\n      const value = bindings[key];\n      if (value !== undefined) {\n        sqlite3.bind(stmt, i, value);\n      }\n    }\n    return SQLite.SQLITE_OK;\n  };\n\n  sqlite3.bind = function(stmt, i, value) {\n    verifyStatement(stmt);\n    switch (typeof value) {\n      case 'number':\n        if (value === (value | 0)) {\n          return sqlite3.bind_int(stmt, i, value);\n        } else {\n          return sqlite3.bind_double(stmt, i, value);\n        }\n      case 'string':\n        return sqlite3.bind_text(stmt, i, value);\n      default:\n        if (value instanceof Uint8Array || Array.isArray(value)) {\n          return sqlite3.bind_blob(stmt, i, value);\n        } else if (value === null) {\n          return sqlite3.bind_null(stmt, i);\n        } else if (typeof value === 'bigint') {\n          return sqlite3.bind_int64(stmt, i, value);\n        } else if (value === undefined) {\n          // Existing binding (or NULL) will be used.\n          return SQLite.SQLITE_NOTICE;\n        } else {\n          console.warn('unknown binding converted to null', value);\n          return sqlite3.bind_null(stmt, i);\n        }\n    }\n  };\n\n  sqlite3.bind_blob = (function() {\n    const fname = 'sqlite3_bind_blob';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      // @ts-ignore\n      const byteLength = value.byteLength ?? value.length;\n      const ptr = Module._sqlite3_malloc(byteLength);\n      Module.HEAPU8.subarray(ptr).set(value);\n      const result = f(stmt, i, ptr, byteLength, sqliteFreeAddress);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_parameter_count = (function() {\n    const fname = 'sqlite3_bind_parameter_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.bind_double = (function() {\n    const fname = 'sqlite3_bind_double';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      const result = f(stmt, i, value);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_int = (function() {\n    const fname = 'sqlite3_bind_int';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      if (value > 0x7fffffff || value < -0x80000000) return SQLite.SQLITE_RANGE;\n\n      const result = f(stmt, i, value);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_int64 = (function() {\n    const fname = 'sqlite3_bind_int64';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      if (value > MAX_INT64 || value < MIN_INT64) return SQLite.SQLITE_RANGE;\n\n      const lo32 = value & 0xffffffffn;\n      const hi32 = value >> 32n;\n      const result = f(stmt, i, Number(lo32), Number(hi32));\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_null = (function() {\n    const fname = 'sqlite3_bind_null';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, i) {\n      verifyStatement(stmt);\n      const result = f(stmt, i);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.bind_parameter_name = (function() {\n    const fname = 'sqlite3_bind_parameter_name';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function(stmt, i) {\n      verifyStatement(stmt);\n      const result = f(stmt, i);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.bind_text = (function() {\n    const fname = 'sqlite3_bind_text';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'));\n    return function(stmt, i, value) {\n      verifyStatement(stmt);\n      const ptr = createUTF8(value);\n      const result = f(stmt, i, ptr, -1, sqliteFreeAddress);\n      // trace(fname, result);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.changes = (function() {\n    const fname = 'sqlite3_changes';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(db) {\n      verifyDatabase(db);\n      const result = f(db);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.last_insert_id = (function() {\n    const fname = 'sqlite3_last_insert_rowid';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(db) {\n      verifyDatabase(db);\n      const result = f(db);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.close = (function() {\n    const fname = 'sqlite3_close';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(db) {\n      verifyDatabase(db);\n      const result = await f(db);\n      databases.delete(db);\n      return check(fname, result, db);\n    };\n  })();\n\n  sqlite3.column = function(stmt, iCol) {\n    verifyStatement(stmt);\n    const type = sqlite3.column_type(stmt, iCol);\n    switch (type) {\n      case SQLite.SQLITE_BLOB:\n        return sqlite3.column_blob(stmt, iCol);\n      case SQLite.SQLITE_FLOAT:\n        return sqlite3.column_double(stmt, iCol);\n      case SQLite.SQLITE_INTEGER:\n        const lo32 = sqlite3.column_int(stmt, iCol);\n        const hi32 = Module.getTempRet0();\n        return cvt32x2AsSafe(lo32, hi32);\n      case SQLite.SQLITE_NULL:\n        return null;\n      case SQLite.SQLITE_TEXT:\n        return sqlite3.column_text(stmt, iCol);\n      default:\n        throw new SQLiteError('unknown type', type);\n    }\n  };\n\n  sqlite3.column_blob = (function() {\n    const fname = 'sqlite3_column_blob';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const nBytes = sqlite3.column_bytes(stmt, iCol);\n      const address = f(stmt, iCol);\n      const result = Module.HEAPU8.subarray(address, address + nBytes);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_bytes = (function() {\n    const fname = 'sqlite3_column_bytes';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_count = (function() {\n    const fname = 'sqlite3_column_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_double = (function() {\n    const fname = 'sqlite3_column_double';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_int = (function() {\n    // Retrieve int64 but use only the lower 32 bits. The upper 32-bits are\n    // accessible with Module.getTempRet0().\n    const fname = 'sqlite3_column_int64';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_int64 = (function() {\n    const fname = 'sqlite3_column_int64';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const lo32 = f(stmt, iCol);\n      const hi32 = Module.getTempRet0();\n      const result = cvt32x2ToBigInt(lo32, hi32);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_name = (function() {\n    const fname = 'sqlite3_column_name';\n    const f = Module.cwrap(fname, ...decl('nn:s'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_names = function(stmt) {\n    const columns = [];\n    const nColumns = sqlite3.column_count(stmt);\n    for (let i = 0; i < nColumns; ++i) {\n      columns.push(sqlite3.column_name(stmt, i));\n    }\n    return columns;\n  };\n\n  sqlite3.column_text = (function() {\n    const fname = 'sqlite3_column_text';\n    const f = Module.cwrap(fname, ...decl('nn:s'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.column_type = (function() {\n    const fname = 'sqlite3_column_type';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(stmt, iCol) {\n      verifyStatement(stmt);\n      const result = f(stmt, iCol);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.create_function = function(db, zFunctionName, nArg, eTextRep, pApp, xFunc, xStep, xFinal) {\n    verifyDatabase(db);\n    if (xFunc && !xStep && !xFinal) {\n      const result = Module.createFunction(db, zFunctionName, nArg, eTextRep, pApp, xFunc);\n      return check('sqlite3_create_function', result, db);\n    }\n\n    if (!xFunc && xStep && xFinal) {\n      const result = Module.createAggregate(db, zFunctionName, nArg, eTextRep, pApp, xStep, xFinal);\n      return check('sqlite3_create_function', result, db);\n    }\n\n    throw new SQLiteError('invalid function combination', SQLite.SQLITE_MISUSE);\n  };\n\n  sqlite3.create_module = function(db, zName, module, appData) {\n    verifyDatabase(db);\n    const result = Module.createModule(db, zName, module, appData);\n    return check('sqlite3_create_module', result, db);\n  };\n\n  sqlite3.data_count = (function() {\n    const fname = 'sqlite3_data_count';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.declare_vtab = (function() {\n    const fname = 'sqlite3_declare_vtab';\n    const f = Module.cwrap(fname, ...decl('ns:n'));\n    return function(pVTab, zSQL) {\n      const result = f(pVTab, zSQL);\n      return check('sqlite3_declare_vtab', result);\n    }\n  })();\n\n  sqlite3.exec = async function(db, sql, callback) {\n    for await (const stmt of sqlite3.statements(db, sql)) {\n      let columns;\n      while ((await sqlite3.step(stmt)) === SQLite.SQLITE_ROW) {\n        if (callback) {\n          columns = columns ?? sqlite3.column_names(stmt);\n          const row = sqlite3.row(stmt);\n          await callback(row, columns);\n        }\n      }\n    }\n    return SQLite.SQLITE_OK;\n  };\n\n  sqlite3.finalize = (function() {\n    const fname = 'sqlite3_finalize';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(stmt) {\n      if (!mapStmtToDB.has(stmt)) {\n        return SQLite.SQLITE_MISUSE;\n      }\n      const result = await f(stmt);\n\n      const db = mapStmtToDB.get(stmt);\n      mapStmtToDB.delete(stmt);\n\n      // Don't throw on error here. Typically the error has already been\n      // thrown and finalize() is part of the cleanup.\n      return result;\n    };\n  })();\n\n  sqlite3.get_autocommit = (function() {\n    const fname = 'sqlite3_get_autocommit';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(db) {\n      const result = f(db);\n      return result;\n    };\n  })();\n\n  sqlite3.libversion = (function() {\n    const fname = 'sqlite3_libversion';\n    const f = Module.cwrap(fname, ...decl(':s'));\n    return function() {\n      const result = f();\n      return result;\n    };\n  })();\n\n  sqlite3.libversion_number = (function() {\n    const fname = 'sqlite3_libversion_number';\n    const f = Module.cwrap(fname, ...decl(':n'));\n    return function() {\n      const result = f();\n      return result;\n    };\n  })();\n\n  sqlite3.limit = (function() {\n    const fname = 'sqlite3_limit';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(db, id, newVal) {\n      const result = f(db, id, newVal);\n      return result;\n    };\n  })();\n\n  sqlite3.open_v2 = (function() {\n    const fname = 'sqlite3_open_v2';\n    const f = Module.cwrap(fname, ...decl('snnn:n'), { async });\n    return async function(zFilename, flags, zVfs) {\n      flags = flags || SQLite.SQLITE_OPEN_CREATE | SQLite.SQLITE_OPEN_READWRITE;\n      zVfs = createUTF8(zVfs);\n      Module.ccall('setup_powersync', 'int', []);\n\n      const result = await f(zFilename, tmpPtr[0], flags, zVfs);\n\n      const db = Module.getValue(tmpPtr[0], '*');\n\n      databases.add(db);\n      Module._sqlite3_free(zVfs);\n\n      Module.ccall('RegisterExtensionFunctions', 'void', ['number'], [db]);\n      check(fname, result);\n      return db;\n    };\n  })();\n\n  sqlite3.register_table_onchange_hook = function(db, callback) {\n    // Register hooks for this DB as a global hook\n    // It will call the global handler above\n    Module.ccall('register_table_update_hook', 'int', ['number'], [db]);\n\n    onTableChangeCallbacks[db] = function(opType, tableNamePtr, rowId) {\n      // Need to get the string from the pointer\n      // const tableName = Module.UTF8ToString(Module.getValue(tableNamePtr, '*'));\n      const memory = new DataView(Module.HEAPU8.buffer);\n\n      // Find the null terminator to determine the string length\n      let length = 0;\n      while (memory.getUint8(tableNamePtr + length) !== 0) {\n        length++;\n      }\n\n      // Extract the string content\n      const stringBytes = new Uint8Array(Module.HEAPU8.buffer, tableNamePtr, length);\n      const tableName = new TextDecoder().decode(stringBytes);\n\n      return callback(opType, tableName, rowId);\n    };\n  };\n\n  sqlite3.prepare_v2 = (function() {\n    const fname = 'sqlite3_prepare_v2';\n    const f = Module.cwrap(fname, ...decl('nnnnn:n'), { async });\n    return async function(db, sql) {\n      const result = await f(db, sql, -1, tmpPtr[0], tmpPtr[1]);\n      check(fname, result, db);\n\n      const stmt = Module.getValue(tmpPtr[0], '*');\n      if (stmt) {\n        mapStmtToDB.set(stmt, db);\n        return { stmt, sql: Module.getValue(tmpPtr[1], '*') };\n      }\n      return null;\n    };\n  })();\n\n  sqlite3.progress_handler = function(db, nProgressOps, handler, userData) {\n    verifyDatabase(db);\n    Module.progressHandler(db, nProgressOps, handler, userData);\n  };\n\n  sqlite3.reset = (function() {\n    const fname = 'sqlite3_reset';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(stmt) {\n      verifyStatement(stmt);\n      const result = await f(stmt);\n      return check(fname, result, mapStmtToDB.get(stmt));\n    };\n  })();\n\n  sqlite3.result = function(context, value) {\n    switch (typeof value) {\n      case 'number':\n        if (value === (value | 0)) {\n          sqlite3.result_int(context, value);\n        } else {\n          sqlite3.result_double(context, value);\n        }\n        break;\n      case 'string':\n        sqlite3.result_text(context, value);\n        break;\n      default:\n        if (value instanceof Uint8Array || Array.isArray(value)) {\n          sqlite3.result_blob(context, value);\n        } else if (value === null) {\n          sqlite3.result_null(context);\n        } else if (typeof value === 'bigint') {\n          return sqlite3.result_int64(context, value);\n        } else {\n          console.warn('unknown result converted to null', value);\n          sqlite3.result_null(context);\n        }\n        break;\n    }\n  };\n\n  sqlite3.result_blob = (function() {\n    const fname = 'sqlite3_result_blob';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function(context, value) {\n      // @ts-ignore\n      const byteLength = value.byteLength ?? value.length;\n      const ptr = Module._sqlite3_malloc(byteLength);\n      Module.HEAPU8.subarray(ptr).set(value);\n      f(context, ptr, byteLength, sqliteFreeAddress); // void return\n    };\n  })();\n\n  sqlite3.result_double = (function() {\n    const fname = 'sqlite3_result_double';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(context, value) {\n      f(context, value); // void return\n    };\n  })();\n\n  sqlite3.result_int = (function() {\n    const fname = 'sqlite3_result_int';\n    const f = Module.cwrap(fname, ...decl('nn:n'));\n    return function(context, value) {\n      f(context, value); // void return\n    };\n  })();\n\n  sqlite3.result_int64 = (function() {\n    const fname = 'sqlite3_result_int64';\n    const f = Module.cwrap(fname, ...decl('nnn:n'));\n    return function(context, value) {\n      if (value > MAX_INT64 || value < MIN_INT64) return SQLite.SQLITE_RANGE;\n\n      const lo32 = value & 0xffffffffn;\n      const hi32 = value >> 32n;\n      f(context, Number(lo32), Number(hi32)); // void return\n    };\n  })();\n\n  sqlite3.result_null = (function() {\n    const fname = 'sqlite3_result_null';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(context) {\n      f(context); // void return\n    };\n  })();\n\n  sqlite3.result_text = (function() {\n    const fname = 'sqlite3_result_text';\n    const f = Module.cwrap(fname, ...decl('nnnn:n'));\n    return function(context, value) {\n      const ptr = createUTF8(value);\n      f(context, ptr, -1, sqliteFreeAddress); // void return\n    };\n  })();\n\n  sqlite3.row = function(stmt) {\n    const row = [];\n    const nColumns = sqlite3.data_count(stmt);\n    for (let i = 0; i < nColumns; ++i) {\n      const value = sqlite3.column(stmt, i);\n\n      // Copy blob if aliasing volatile WebAssembly memory. This avoids an\n      // unnecessary copy if users monkey patch column_blob to copy.\n      // @ts-ignore\n      row.push(value?.buffer === Module.HEAPU8.buffer ? value.slice() : value);\n    }\n    return row;\n  };\n\n  sqlite3.set_authorizer = function(db, authFunction, userData) {\n    verifyDatabase(db);\n    const result = Module.setAuthorizer(db, authFunction, userData);\n    return check('sqlite3_set_authorizer', result, db);\n  };\n\n  sqlite3.sql = (function() {\n    const fname = 'sqlite3_sql';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function(stmt) {\n      verifyStatement(stmt);\n      const result = f(stmt);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.statements = function(db, sql) {\n    return (async function*() {\n      const str = sqlite3.str_new(db, sql);\n      let prepared = { stmt: null, sql: sqlite3.str_value(str) };\n      try {\n        while ((prepared = await sqlite3.prepare_v2(db, prepared.sql))) {\n          // console.log(sqlite3.sql(prepared.stmt));\n          yield prepared.stmt;\n          sqlite3.finalize(prepared.stmt);\n          prepared.stmt = null;\n        }\n      } finally {\n        if (prepared?.stmt) {\n          sqlite3.finalize(prepared.stmt);\n        }\n        sqlite3.str_finish(str);\n      }\n    })();\n  };\n\n  sqlite3.step = (function() {\n    const fname = 'sqlite3_step';\n    const f = Module.cwrap(fname, ...decl('n:n'), { async });\n    return async function(stmt) {\n      verifyStatement(stmt);\n      const result = await f(stmt);\n      return check(fname, result, mapStmtToDB.get(stmt), [SQLite.SQLITE_ROW, SQLite.SQLITE_DONE]);\n    };\n  })();\n\n  // Duplicate some of the SQLite dynamic string API but without\n  // calling SQLite (except for memory allocation). We need some way\n  // to transfer Javascript strings and might as well use an API\n  // that mimics the SQLite API.\n  let stringId = 0;\n  const strings = new Map();\n\n  sqlite3.str_new = function(db, s = '') {\n    const sBytes = Module.lengthBytesUTF8(s);\n    const str = stringId++ & 0xffffffff;\n    const data = {\n      offset: Module._sqlite3_malloc(sBytes + 1),\n      bytes: sBytes\n    };\n    strings.set(str, data);\n    Module.stringToUTF8(s, data.offset, data.bytes + 1);\n    return str;\n  };\n\n  sqlite3.str_appendall = function(str, s) {\n    if (!strings.has(str)) {\n      throw new SQLiteError('not a string', SQLite.SQLITE_MISUSE);\n    }\n    const data = strings.get(str);\n\n    const sBytes = Module.lengthBytesUTF8(s);\n    const newBytes = data.bytes + sBytes;\n    const newOffset = Module._sqlite3_malloc(newBytes + 1);\n    const newArray = Module.HEAPU8.subarray(newOffset, newOffset + newBytes + 1);\n    newArray.set(Module.HEAPU8.subarray(data.offset, data.offset + data.bytes));\n    Module.stringToUTF8(s, newOffset + data.bytes, sBytes + 1);\n\n    Module._sqlite3_free(data.offset);\n    data.offset = newOffset;\n    data.bytes = newBytes;\n    strings.set(str, data);\n  };\n\n  sqlite3.str_finish = function(str) {\n    if (!strings.has(str)) {\n      throw new SQLiteError('not a string', SQLite.SQLITE_MISUSE);\n    }\n    const data = strings.get(str);\n    strings.delete(str);\n    Module._sqlite3_free(data.offset);\n  };\n\n  sqlite3.str_value = function(str) {\n    if (!strings.has(str)) {\n      throw new SQLiteError('not a string', SQLite.SQLITE_MISUSE);\n    }\n    return strings.get(str).offset;\n  };\n\n  sqlite3.user_data = function(context) {\n    return Module.getFunctionUserData(context);\n  };\n\n  sqlite3.value = function(pValue) {\n    const type = sqlite3.value_type(pValue);\n    switch (type) {\n      case SQLite.SQLITE_BLOB:\n        return sqlite3.value_blob(pValue);\n      case SQLite.SQLITE_FLOAT:\n        return sqlite3.value_double(pValue);\n      case SQLite.SQLITE_INTEGER:\n        const lo32 = sqlite3.value_int(pValue);\n        const hi32 = Module.getTempRet0();\n        return cvt32x2AsSafe(lo32, hi32);\n      case SQLite.SQLITE_NULL:\n        return null;\n      case SQLite.SQLITE_TEXT:\n        return sqlite3.value_text(pValue);\n      default:\n        throw new SQLiteError('unknown type', type);\n    }\n  };\n\n  sqlite3.value_blob = (function() {\n    const fname = 'sqlite3_value_blob';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const nBytes = sqlite3.value_bytes(pValue);\n      const address = f(pValue);\n      const result = Module.HEAPU8.subarray(address, address + nBytes);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_bytes = (function() {\n    const fname = 'sqlite3_value_bytes';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_double = (function() {\n    const fname = 'sqlite3_value_double';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_int = (function() {\n    const fname = 'sqlite3_value_int64';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_int64 = (function() {\n    const fname = 'sqlite3_value_int64';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const lo32 = f(pValue);\n      const hi32 = Module.getTempRet0();\n      const result = cvt32x2ToBigInt(lo32, hi32);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_text = (function() {\n    const fname = 'sqlite3_value_text';\n    const f = Module.cwrap(fname, ...decl('n:s'));\n    return function(pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.value_type = (function() {\n    const fname = 'sqlite3_value_type';\n    const f = Module.cwrap(fname, ...decl('n:n'));\n    return function(pValue) {\n      const result = f(pValue);\n      // trace(fname, result);\n      return result;\n    };\n  })();\n\n  sqlite3.vfs_register = function(vfs, makeDefault) {\n    const result = Module.registerVFS(vfs, makeDefault);\n    return check('sqlite3_vfs_register', result);\n  };\n\n  function check(fname, result, db = null, allowed = [SQLite.SQLITE_OK]) {\n    // trace(fname, result);\n    if (allowed.includes(result)) return result;\n    const message = db ? Module.ccall('sqlite3_errmsg', 'string', ['number'], [db]) : fname;\n    throw new SQLiteError(message, result);\n  }\n\n  return sqlite3;\n}\n\nfunction trace(...args) {\n  // const date = new Date();\n  // const t = date.getHours().toString().padStart(2, '0') + ':' +\n  //           date.getMinutes().toString().padStart(2, '0') + ':' +\n  //           date.getSeconds().toString().padStart(2, '0') + '.' +\n  //           date.getMilliseconds().toString().padStart(3, '0');\n  // console.debug(t, ...args);\n}\n\n// Helper function to use a more compact signature specification.\nfunction decl(s) {\n  const result = [];\n  const m = s.match(/([ns@]*):([nsv@])/);\n  switch (m[2]) {\n    case 'n':\n      result.push('number');\n      break;\n    case 's':\n      result.push('string');\n      break;\n    case 'v':\n      result.push(null);\n      break;\n  }\n\n  const args = [];\n  for (let c of m[1]) {\n    switch (c) {\n      case 'n':\n        args.push('number');\n        break;\n      case 's':\n        args.push('string');\n        break;\n    }\n  }\n  result.push(args);\n  return result;\n}\n","// Primary result codes.\n// https://www.sqlite.org/rescode.html\nexport const SQLITE_OK = 0;\nexport const SQLITE_ERROR = 1;\nexport const SQLITE_INTERNAL = 2;\nexport const SQLITE_PERM = 3;\nexport const SQLITE_ABORT = 4;\nexport const SQLITE_BUSY = 5;\nexport const SQLITE_LOCKED = 6;\nexport const SQLITE_NOMEM = 7;\nexport const SQLITE_READONLY = 8;\nexport const SQLITE_INTERRUPT = 9;\nexport const SQLITE_IOERR = 10;\nexport const SQLITE_CORRUPT = 11;\nexport const SQLITE_NOTFOUND = 12;\nexport const SQLITE_FULL = 13;\nexport const SQLITE_CANTOPEN = 14;\nexport const SQLITE_PROTOCOL = 15;\nexport const SQLITE_EMPTY = 16;\nexport const SQLITE_SCHEMA = 17;\nexport const SQLITE_TOOBIG = 18;\nexport const SQLITE_CONSTRAINT = 19;\nexport const SQLITE_MISMATCH = 20;\nexport const SQLITE_MISUSE = 21;\nexport const SQLITE_NOLFS = 22;\nexport const SQLITE_AUTH = 23;\nexport const SQLITE_FORMAT = 24;\nexport const SQLITE_RANGE = 25;\nexport const SQLITE_NOTADB = 26;\nexport const SQLITE_NOTICE = 27;\nexport const SQLITE_WARNING = 28;\nexport const SQLITE_ROW = 100;\nexport const SQLITE_DONE = 101;\n\n// Extended error codes.\nexport const SQLITE_IOERR_ACCESS = 3338;\nexport const SQLITE_IOERR_CHECKRESERVEDLOCK = 3594;\nexport const SQLITE_IOERR_CLOSE = 4106;\nexport const SQLITE_IOERR_DATA = 8202;\nexport const SQLITE_IOERR_DELETE = 2570;\nexport const SQLITE_IOERR_DELETE_NOENT = 5898;\nexport const SQLITE_IOERR_DIR_FSYNC = 1290;\nexport const SQLITE_IOERR_FSTAT = 1802;\nexport const SQLITE_IOERR_FSYNC = 1034;\nexport const SQLITE_IOERR_GETTEMPPATH = 6410;\nexport const SQLITE_IOERR_LOCK = 3850;\nexport const SQLITE_IOERR_NOMEM = 3082;\nexport const SQLITE_IOERR_READ = 266;\nexport const SQLITE_IOERR_RDLOCK = 2314;\nexport const SQLITE_IOERR_SEEK = 5642;\nexport const SQLITE_IOERR_SHORT_READ = 522;\nexport const SQLITE_IOERR_TRUNCATE = 1546;\nexport const SQLITE_IOERR_UNLOCK = 2058;\nexport const SQLITE_IOERR_VNODE = 6922;\nexport const SQLITE_IOERR_WRITE = 778;\nexport const SQLITE_IOERR_BEGIN_ATOMIC = 7434;\nexport const SQLITE_IOERR_COMMIT_ATOMIC = 7690;\nexport const SQLITE_IOERR_ROLLBACK_ATOMIC = 7946;\n\n// Other extended result codes.\nexport const SQLITE_CONSTRAINT_CHECK = 275;\nexport const SQLITE_CONSTRAINT_COMMITHOOK = 531;\nexport const SQLITE_CONSTRAINT_FOREIGNKEY = 787;\nexport const SQLITE_CONSTRAINT_FUNCTION = 1043;\nexport const SQLITE_CONSTRAINT_NOTNULL = 1299;\nexport const SQLITE_CONSTRAINT_PINNED = 2835;\nexport const SQLITE_CONSTRAINT_PRIMARYKEY = 1555;\nexport const SQLITE_CONSTRAINT_ROWID = 2579;\nexport const SQLITE_CONSTRAINT_TRIGGER = 1811;\nexport const SQLITE_CONSTRAINT_UNIQUE = 2067;\nexport const SQLITE_CONSTRAINT_VTAB = 2323;\n\n// Open flags.\n// https://www.sqlite.org/c3ref/c_open_autoproxy.html\nexport const SQLITE_OPEN_READONLY = 0x00000001;\nexport const SQLITE_OPEN_READWRITE = 0x00000002;\nexport const SQLITE_OPEN_CREATE = 0x00000004;\nexport const SQLITE_OPEN_DELETEONCLOSE = 0x00000008;\nexport const SQLITE_OPEN_EXCLUSIVE = 0x00000010;\nexport const SQLITE_OPEN_AUTOPROXY = 0x00000020;\nexport const SQLITE_OPEN_URI = 0x00000040;\nexport const SQLITE_OPEN_MEMORY = 0x00000080;\nexport const SQLITE_OPEN_MAIN_DB = 0x00000100;\nexport const SQLITE_OPEN_TEMP_DB = 0x00000200;\nexport const SQLITE_OPEN_TRANSIENT_DB = 0x00000400;\nexport const SQLITE_OPEN_MAIN_JOURNAL = 0x00000800;\nexport const SQLITE_OPEN_TEMP_JOURNAL = 0x00001000;\nexport const SQLITE_OPEN_SUBJOURNAL = 0x00002000;\nexport const SQLITE_OPEN_SUPER_JOURNAL = 0x00004000;\nexport const SQLITE_OPEN_NOMUTEX = 0x00008000;\nexport const SQLITE_OPEN_FULLMUTEX = 0x00010000;\nexport const SQLITE_OPEN_SHAREDCACHE = 0x00020000;\nexport const SQLITE_OPEN_PRIVATECACHE = 0x00040000;\nexport const SQLITE_OPEN_WAL = 0x00080000;\nexport const SQLITE_OPEN_NOFOLLOW = 0x01000000;\n\n// Locking levels.\n// https://www.sqlite.org/c3ref/c_lock_exclusive.html\nexport const SQLITE_LOCK_NONE = 0;\nexport const SQLITE_LOCK_SHARED = 1;\nexport const SQLITE_LOCK_RESERVED = 2;\nexport const SQLITE_LOCK_PENDING = 3;\nexport const SQLITE_LOCK_EXCLUSIVE = 4;\n\n// Device characteristics.\n// https://www.sqlite.org/c3ref/c_iocap_atomic.html\nexport const SQLITE_IOCAP_ATOMIC = 0x00000001;\nexport const SQLITE_IOCAP_ATOMIC512 = 0x00000002;\nexport const SQLITE_IOCAP_ATOMIC1K = 0x00000004;\nexport const SQLITE_IOCAP_ATOMIC2K = 0x00000008;\nexport const SQLITE_IOCAP_ATOMIC4K = 0x00000010;\nexport const SQLITE_IOCAP_ATOMIC8K = 0x00000020;\nexport const SQLITE_IOCAP_ATOMIC16K = 0x00000040;\nexport const SQLITE_IOCAP_ATOMIC32K = 0x00000080;\nexport const SQLITE_IOCAP_ATOMIC64K = 0x00000100;\nexport const SQLITE_IOCAP_SAFE_APPEND = 0x00000200;\nexport const SQLITE_IOCAP_SEQUENTIAL = 0x00000400;\nexport const SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 0x00000800;\nexport const SQLITE_IOCAP_POWERSAFE_OVERWRITE = 0x00001000;\nexport const SQLITE_IOCAP_IMMUTABLE = 0x00002000;\nexport const SQLITE_IOCAP_BATCH_ATOMIC = 0x00004000;\n\n// xAccess flags.\n// https://www.sqlite.org/c3ref/c_access_exists.html\nexport const SQLITE_ACCESS_EXISTS = 0;\nexport const SQLITE_ACCESS_READWRITE = 1;\nexport const SQLITE_ACCESS_READ = 2;\n\n// File control opcodes\n// https://www.sqlite.org/c3ref/c_fcntl_begin_atomic_write.html#sqlitefcntlbeginatomicwrite\nexport const SQLITE_FCNTL_LOCKSTATE = 1; \nexport const SQLITE_FCNTL_GET_LOCKPROXYFILE = 2; \nexport const SQLITE_FCNTL_SET_LOCKPROXYFILE = 3; \nexport const SQLITE_FCNTL_LAST_ERRNO = 4; \nexport const SQLITE_FCNTL_SIZE_HINT = 5; \nexport const SQLITE_FCNTL_CHUNK_SIZE = 6; \nexport const SQLITE_FCNTL_FILE_POINTER = 7; \nexport const SQLITE_FCNTL_SYNC_OMITTED = 8; \nexport const SQLITE_FCNTL_WIN32_AV_RETRY = 9; \nexport const SQLITE_FCNTL_PERSIST_WAL = 10; \nexport const SQLITE_FCNTL_OVERWRITE = 11; \nexport const SQLITE_FCNTL_VFSNAME = 12; \nexport const SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13; \nexport const SQLITE_FCNTL_PRAGMA = 14; \nexport const SQLITE_FCNTL_BUSYHANDLER = 15; \nexport const SQLITE_FCNTL_TEMPFILENAME = 16; \nexport const SQLITE_FCNTL_MMAP_SIZE = 18; \nexport const SQLITE_FCNTL_TRACE = 19; \nexport const SQLITE_FCNTL_HAS_MOVED = 20; \nexport const SQLITE_FCNTL_SYNC = 21; \nexport const SQLITE_FCNTL_COMMIT_PHASETWO = 22; \nexport const SQLITE_FCNTL_WIN32_SET_HANDLE = 23; \nexport const SQLITE_FCNTL_WAL_BLOCK = 24; \nexport const SQLITE_FCNTL_ZIPVFS = 25; \nexport const SQLITE_FCNTL_RBU = 26; \nexport const SQLITE_FCNTL_VFS_POINTER = 27; \nexport const SQLITE_FCNTL_JOURNAL_POINTER = 28; \nexport const SQLITE_FCNTL_WIN32_GET_HANDLE = 29; \nexport const SQLITE_FCNTL_PDB = 30; \nexport const SQLITE_FCNTL_BEGIN_ATOMIC_WRITE = 31; \nexport const SQLITE_FCNTL_COMMIT_ATOMIC_WRITE = 32; \nexport const SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE = 33; \nexport const SQLITE_FCNTL_LOCK_TIMEOUT = 34; \nexport const SQLITE_FCNTL_DATA_VERSION = 35; \nexport const SQLITE_FCNTL_SIZE_LIMIT = 36; \nexport const SQLITE_FCNTL_CKPT_DONE = 37; \nexport const SQLITE_FCNTL_RESERVE_BYTES = 38; \nexport const SQLITE_FCNTL_CKPT_START = 39;\n\n// Fundamental datatypes.\n// https://www.sqlite.org/c3ref/c_blob.html\nexport const SQLITE_INTEGER = 1;\nexport const SQLITE_FLOAT = 2;\nexport const SQLITE_TEXT = 3;\nexport const SQLITE_BLOB = 4;\nexport const SQLITE_NULL = 5;\n\n// Special destructor behavior.\n// https://www.sqlite.org/c3ref/c_static.html\nexport const SQLITE_STATIC = 0;\nexport const SQLITE_TRANSIENT = -1;\n\n// Text encodings.\n// https://sqlite.org/c3ref/c_any.html\nexport const SQLITE_UTF8 = 1;     /* IMP: R-37514-35566 */\nexport const SQLITE_UTF16LE = 2;  /* IMP: R-03371-37637 */\nexport const SQLITE_UTF16BE = 3;  /* IMP: R-51971-34154 */\nexport const SQLITE_UTF16 = 4;    /* Use native byte order */\n\n// Module constraint ops.\nexport const SQLITE_INDEX_CONSTRAINT_EQ        = 2;\nexport const SQLITE_INDEX_CONSTRAINT_GT        = 4;\nexport const SQLITE_INDEX_CONSTRAINT_LE        = 8;\nexport const SQLITE_INDEX_CONSTRAINT_LT        = 16;\nexport const SQLITE_INDEX_CONSTRAINT_GE        = 32;\nexport const SQLITE_INDEX_CONSTRAINT_MATCH     = 64;\nexport const SQLITE_INDEX_CONSTRAINT_LIKE      = 65;\nexport const SQLITE_INDEX_CONSTRAINT_GLOB      = 66;\nexport const SQLITE_INDEX_CONSTRAINT_REGEXP    = 67;\nexport const SQLITE_INDEX_CONSTRAINT_NE        = 68;\nexport const SQLITE_INDEX_CONSTRAINT_ISNOT     = 69;\nexport const SQLITE_INDEX_CONSTRAINT_ISNOTNULL = 70;\nexport const SQLITE_INDEX_CONSTRAINT_ISNULL    = 71;\nexport const SQLITE_INDEX_CONSTRAINT_IS        = 72;\nexport const SQLITE_INDEX_CONSTRAINT_FUNCTION  = 150;\nexport const SQLITE_INDEX_SCAN_UNIQUE          = 1;  /* Scan visits at most = 1 row */\n\n// Function flags\nexport const SQLITE_DETERMINISTIC = 0x000000800;\nexport const SQLITE_DIRECTONLY    = 0x000080000;\nexport const SQLITE_SUBTYPE       = 0x000100000;\nexport const SQLITE_INNOCUOUS     = 0x000200000;\n\n// Sync flags\nexport const SQLITE_SYNC_NORMAL   = 0x00002;\nexport const SQLITE_SYNC_FULL     = 0x00003;\nexport const SQLITE_SYNC_DATAONLY = 0x00010;\n\n// Authorizer action codes\nexport const SQLITE_CREATE_INDEX        = 1;\nexport const SQLITE_CREATE_TABLE        = 2;\nexport const SQLITE_CREATE_TEMP_INDEX   = 3;\nexport const SQLITE_CREATE_TEMP_TABLE   = 4;\nexport const SQLITE_CREATE_TEMP_TRIGGER = 5;\nexport const SQLITE_CREATE_TEMP_VIEW    = 6;\nexport const SQLITE_CREATE_TRIGGER      = 7;\nexport const SQLITE_CREATE_VIEW         = 8;\nexport const SQLITE_DELETE              = 9;\nexport const SQLITE_DROP_INDEX          = 10;\nexport const SQLITE_DROP_TABLE          = 11;\nexport const SQLITE_DROP_TEMP_INDEX     = 12;\nexport const SQLITE_DROP_TEMP_TABLE     = 13;\nexport const SQLITE_DROP_TEMP_TRIGGER   = 14;\nexport const SQLITE_DROP_TEMP_VIEW      = 15;\nexport const SQLITE_DROP_TRIGGER        = 16;\nexport const SQLITE_DROP_VIEW           = 17;\nexport const SQLITE_INSERT              = 18;\nexport const SQLITE_PRAGMA              = 19;\nexport const SQLITE_READ                = 20;\nexport const SQLITE_SELECT              = 21;\nexport const SQLITE_TRANSACTION         = 22;\nexport const SQLITE_UPDATE              = 23;\nexport const SQLITE_ATTACH              = 24;\nexport const SQLITE_DETACH              = 25;\nexport const SQLITE_ALTER_TABLE         = 26;\nexport const SQLITE_REINDEX             = 27;\nexport const SQLITE_ANALYZE             = 28;\nexport const SQLITE_CREATE_VTABLE       = 29;\nexport const SQLITE_DROP_VTABLE         = 30;\nexport const SQLITE_FUNCTION            = 31;\nexport const SQLITE_SAVEPOINT           = 32;\nexport const SQLITE_COPY                = 0;\nexport const SQLITE_RECURSIVE           = 33;\n\n// Authorizer return codes\nexport const SQLITE_DENY   = 1;\nexport const SQLITE_IGNORE = 2;\n\n// Limit categories\nexport const SQLITE_LIMIT_LENGTH              = 0;\nexport const SQLITE_LIMIT_SQL_LENGTH          = 1;\nexport const SQLITE_LIMIT_COLUMN              = 2;\nexport const SQLITE_LIMIT_EXPR_DEPTH          = 3;\nexport const SQLITE_LIMIT_COMPOUND_SELECT     = 4;\nexport const SQLITE_LIMIT_VDBE_OP             = 5;\nexport const SQLITE_LIMIT_FUNCTION_ARG        = 6;\nexport const SQLITE_LIMIT_ATTACHED            = 7;\nexport const SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8;\nexport const SQLITE_LIMIT_VARIABLE_NUMBER     = 9;\nexport const SQLITE_LIMIT_TRIGGER_DEPTH       = 10;\nexport const SQLITE_LIMIT_WORKER_THREADS      = 11;"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__asyncValues","o","Symbol","asyncIterator","TypeError","m","i","call","__values","iterator","verb","n","v","settle","d","SQLite","Comlink","v4","uuid","_openDB","dbFileName","default","moduleFactory","module","sqlite3","Factory","IDBBatchAtomicVFS","vfs","vfs_register","db","open_v2","listeners","Map","register_table_onchange_hook","opType","tableName","rowId","Array","from","values","forEach","l","registerOnTableChange","callback","id","set","proxy","delete","execute","sql","bindings","navigator","locks","request","_a","e_1","_b","_c","results","_d","_e","statements","_f","stmt","columns","wrappedBindings","binding","b","index","arr","reset","bind_collection","rows","SQLITE_ROW","row","push","column_names","length","e_1_1","error","return","resultset","outRow","key","insertId","last_insert_id","rowsAffected","changes","_array","close","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","validate","byteToHex","toString","slice","unsafeStringify","offset","stringify","native","options","buf","rnds","random","REGEX","test","BigInt","prototype","MAX_INT64","MIN_INT64","SQLiteError","constructor","message","code","async","onTableChangeCallbacks","globalThis","__onTablesChanged","setTimeout","Module","sqliteFreeAddress","_getSqliteFree","tmp","_malloc","tmpPtr","createUTF8","s","lengthBytesUTF8","zts","_sqlite3_malloc","stringToUTF8","cvt32x2ToBigInt","lo32","hi32","cvt32x2AsSafe","hiMax","Number","MAX_SAFE_INTEGER","hiMin","MIN_SAFE_INTEGER","databases","Set","verifyDatabase","has","SQLITE_MISUSE","mapStmtToDB","verifyStatement","isArray","nBindings","bind_parameter_count","bind_parameter_name","undefined","SQLITE_OK","bind_int","bind_double","bind_text","bind_blob","bind_null","bind_int64","SQLITE_NOTICE","console","warn","fname","f","cwrap","decl","byteLength","ptr","HEAPU8","subarray","check","get","SQLITE_RANGE","_ref2","_asyncToGenerator","_x","arguments","column","iCol","type","column_type","SQLITE_BLOB","column_blob","SQLITE_FLOAT","column_double","SQLITE_INTEGER","column_int","getTempRet0","SQLITE_NULL","SQLITE_TEXT","column_text","nBytes","column_bytes","address","column_count","column_int64","column_name","nColumns","create_function","zFunctionName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","createFunction","createAggregate","create_module","zName","appData","createModule","data_count","declare_vtab","pVTab","zSQL","exec","_ref3","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","err","_x2","_x3","_x4","finalize","_ref4","_x5","get_autocommit","libversion","libversion_number","limit","newVal","_ref5","zFilename","flags","zVfs","SQLITE_OPEN_CREATE","SQLITE_OPEN_READWRITE","ccall","getValue","add","_sqlite3_free","_x6","_x7","_x8","tableNamePtr","memory","DataView","buffer","getUint8","stringBytes","TextDecoder","decode","prepare_v2","_ref6","_x9","_x10","progress_handler","nProgressOps","handler","userData","progressHandler","_ref7","_x11","context","result_int","result_double","result_text","result_blob","result_null","result_int64","set_authorizer","authFunction","setAuthorizer","_wrapAsyncGenerator","str","str_new","prepared","str_value","_awaitAsyncGenerator","str_finish","_ref8","SQLITE_DONE","_x12","stringId","strings","sBytes","data","bytes","str_appendall","newBytes","newOffset","newArray","user_data","getFunctionUserData","pValue","value_type","value_blob","value_double","value_int","value_text","value_bytes","value_int64","makeDefault","registerVFS","allowed","includes","trace","args","match","c","SQLITE_ERROR","SQLITE_INTERNAL","SQLITE_PERM","SQLITE_ABORT","SQLITE_BUSY","SQLITE_LOCKED","SQLITE_NOMEM","SQLITE_READONLY","SQLITE_INTERRUPT","SQLITE_IOERR","SQLITE_CORRUPT","SQLITE_NOTFOUND","SQLITE_FULL","SQLITE_CANTOPEN","SQLITE_PROTOCOL","SQLITE_EMPTY","SQLITE_SCHEMA","SQLITE_TOOBIG","SQLITE_CONSTRAINT","SQLITE_MISMATCH","SQLITE_NOLFS","SQLITE_AUTH","SQLITE_FORMAT","SQLITE_NOTADB","SQLITE_WARNING","SQLITE_IOERR_ACCESS","SQLITE_IOERR_CHECKRESERVEDLOCK","SQLITE_IOERR_CLOSE","SQLITE_IOERR_DATA","SQLITE_IOERR_DELETE","SQLITE_IOERR_DELETE_NOENT","SQLITE_IOERR_DIR_FSYNC","SQLITE_IOERR_FSTAT","SQLITE_IOERR_FSYNC","SQLITE_IOERR_GETTEMPPATH","SQLITE_IOERR_LOCK","SQLITE_IOERR_NOMEM","SQLITE_IOERR_READ","SQLITE_IOERR_RDLOCK","SQLITE_IOERR_SEEK","SQLITE_IOERR_SHORT_READ","SQLITE_IOERR_TRUNCATE","SQLITE_IOERR_UNLOCK","SQLITE_IOERR_VNODE","SQLITE_IOERR_WRITE","SQLITE_IOERR_BEGIN_ATOMIC","SQLITE_IOERR_COMMIT_ATOMIC","SQLITE_IOERR_ROLLBACK_ATOMIC","SQLITE_CONSTRAINT_CHECK","SQLITE_CONSTRAINT_COMMITHOOK","SQLITE_CONSTRAINT_FOREIGNKEY","SQLITE_CONSTRAINT_FUNCTION","SQLITE_CONSTRAINT_NOTNULL","SQLITE_CONSTRAINT_PINNED","SQLITE_CONSTRAINT_PRIMARYKEY","SQLITE_CONSTRAINT_ROWID","SQLITE_CONSTRAINT_TRIGGER","SQLITE_CONSTRAINT_UNIQUE","SQLITE_CONSTRAINT_VTAB","SQLITE_OPEN_READONLY","SQLITE_OPEN_DELETEONCLOSE","SQLITE_OPEN_EXCLUSIVE","SQLITE_OPEN_AUTOPROXY","SQLITE_OPEN_URI","SQLITE_OPEN_MEMORY","SQLITE_OPEN_MAIN_DB","SQLITE_OPEN_TEMP_DB","SQLITE_OPEN_TRANSIENT_DB","SQLITE_OPEN_MAIN_JOURNAL","SQLITE_OPEN_TEMP_JOURNAL","SQLITE_OPEN_SUBJOURNAL","SQLITE_OPEN_SUPER_JOURNAL","SQLITE_OPEN_NOMUTEX","SQLITE_OPEN_FULLMUTEX","SQLITE_OPEN_SHAREDCACHE","SQLITE_OPEN_PRIVATECACHE","SQLITE_OPEN_WAL","SQLITE_OPEN_NOFOLLOW","SQLITE_LOCK_NONE","SQLITE_LOCK_SHARED","SQLITE_LOCK_RESERVED","SQLITE_LOCK_PENDING","SQLITE_LOCK_EXCLUSIVE","SQLITE_IOCAP_ATOMIC","SQLITE_IOCAP_ATOMIC512","SQLITE_IOCAP_ATOMIC1K","SQLITE_IOCAP_ATOMIC2K","SQLITE_IOCAP_ATOMIC4K","SQLITE_IOCAP_ATOMIC8K","SQLITE_IOCAP_ATOMIC16K","SQLITE_IOCAP_ATOMIC32K","SQLITE_IOCAP_ATOMIC64K","SQLITE_IOCAP_SAFE_APPEND","SQLITE_IOCAP_SEQUENTIAL","SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN","SQLITE_IOCAP_POWERSAFE_OVERWRITE","SQLITE_IOCAP_IMMUTABLE","SQLITE_IOCAP_BATCH_ATOMIC","SQLITE_ACCESS_EXISTS","SQLITE_ACCESS_READWRITE","SQLITE_ACCESS_READ","SQLITE_FCNTL_LOCKSTATE","SQLITE_FCNTL_GET_LOCKPROXYFILE","SQLITE_FCNTL_SET_LOCKPROXYFILE","SQLITE_FCNTL_LAST_ERRNO","SQLITE_FCNTL_SIZE_HINT","SQLITE_FCNTL_CHUNK_SIZE","SQLITE_FCNTL_FILE_POINTER","SQLITE_FCNTL_SYNC_OMITTED","SQLITE_FCNTL_WIN32_AV_RETRY","SQLITE_FCNTL_PERSIST_WAL","SQLITE_FCNTL_OVERWRITE","SQLITE_FCNTL_VFSNAME","SQLITE_FCNTL_POWERSAFE_OVERWRITE","SQLITE_FCNTL_PRAGMA","SQLITE_FCNTL_BUSYHANDLER","SQLITE_FCNTL_TEMPFILENAME","SQLITE_FCNTL_MMAP_SIZE","SQLITE_FCNTL_TRACE","SQLITE_FCNTL_HAS_MOVED","SQLITE_FCNTL_SYNC","SQLITE_FCNTL_COMMIT_PHASETWO","SQLITE_FCNTL_WIN32_SET_HANDLE","SQLITE_FCNTL_WAL_BLOCK","SQLITE_FCNTL_ZIPVFS","SQLITE_FCNTL_RBU","SQLITE_FCNTL_VFS_POINTER","SQLITE_FCNTL_JOURNAL_POINTER","SQLITE_FCNTL_WIN32_GET_HANDLE","SQLITE_FCNTL_PDB","SQLITE_FCNTL_BEGIN_ATOMIC_WRITE","SQLITE_FCNTL_COMMIT_ATOMIC_WRITE","SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE","SQLITE_FCNTL_LOCK_TIMEOUT","SQLITE_FCNTL_DATA_VERSION","SQLITE_FCNTL_SIZE_LIMIT","SQLITE_FCNTL_CKPT_DONE","SQLITE_FCNTL_RESERVE_BYTES","SQLITE_FCNTL_CKPT_START","SQLITE_STATIC","SQLITE_TRANSIENT","SQLITE_UTF8","SQLITE_UTF16LE","SQLITE_UTF16BE","SQLITE_UTF16","SQLITE_INDEX_CONSTRAINT_EQ","SQLITE_INDEX_CONSTRAINT_GT","SQLITE_INDEX_CONSTRAINT_LE","SQLITE_INDEX_CONSTRAINT_LT","SQLITE_INDEX_CONSTRAINT_GE","SQLITE_INDEX_CONSTRAINT_MATCH","SQLITE_INDEX_CONSTRAINT_LIKE","SQLITE_INDEX_CONSTRAINT_GLOB","SQLITE_INDEX_CONSTRAINT_REGEXP","SQLITE_INDEX_CONSTRAINT_NE","SQLITE_INDEX_CONSTRAINT_ISNOT","SQLITE_INDEX_CONSTRAINT_ISNOTNULL","SQLITE_INDEX_CONSTRAINT_ISNULL","SQLITE_INDEX_CONSTRAINT_IS","SQLITE_INDEX_CONSTRAINT_FUNCTION","SQLITE_INDEX_SCAN_UNIQUE","SQLITE_DETERMINISTIC","SQLITE_DIRECTONLY","SQLITE_SUBTYPE","SQLITE_INNOCUOUS","SQLITE_SYNC_NORMAL","SQLITE_SYNC_FULL","SQLITE_SYNC_DATAONLY","SQLITE_CREATE_INDEX","SQLITE_CREATE_TABLE","SQLITE_CREATE_TEMP_INDEX","SQLITE_CREATE_TEMP_TABLE","SQLITE_CREATE_TEMP_TRIGGER","SQLITE_CREATE_TEMP_VIEW","SQLITE_CREATE_TRIGGER","SQLITE_CREATE_VIEW","SQLITE_DELETE","SQLITE_DROP_INDEX","SQLITE_DROP_TABLE","SQLITE_DROP_TEMP_INDEX","SQLITE_DROP_TEMP_TABLE","SQLITE_DROP_TEMP_TRIGGER","SQLITE_DROP_TEMP_VIEW","SQLITE_DROP_TRIGGER","SQLITE_DROP_VIEW","SQLITE_INSERT","SQLITE_PRAGMA","SQLITE_READ","SQLITE_SELECT","SQLITE_TRANSACTION","SQLITE_UPDATE","SQLITE_ATTACH","SQLITE_DETACH","SQLITE_ALTER_TABLE","SQLITE_REINDEX","SQLITE_ANALYZE","SQLITE_CREATE_VTABLE","SQLITE_DROP_VTABLE","SQLITE_FUNCTION","SQLITE_SAVEPOINT","SQLITE_COPY","SQLITE_RECURSIVE","SQLITE_DENY","SQLITE_IGNORE","SQLITE_LIMIT_LENGTH","SQLITE_LIMIT_SQL_LENGTH","SQLITE_LIMIT_COLUMN","SQLITE_LIMIT_EXPR_DEPTH","SQLITE_LIMIT_COMPOUND_SELECT","SQLITE_LIMIT_VDBE_OP","SQLITE_LIMIT_FUNCTION_ARG","SQLITE_LIMIT_ATTACHED","SQLITE_LIMIT_LIKE_PATTERN_LENGTH","SQLITE_LIMIT_VARIABLE_NUMBER","SQLITE_LIMIT_TRIGGER_DEPTH","SQLITE_LIMIT_WORKER_THREADS"],"sourceRoot":""}